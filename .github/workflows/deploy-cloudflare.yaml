name: Deploy App to Cloudflare

on:
  workflow_call:

jobs:
  deploy-cloudflare:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        environment: [mainnet, sepolia, mainnet-test]
    name: Deploy frontend to Cloudflare
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Rust
        uses: actions-rust-lang/setup-rust-toolchain@v1
        with:
          target: "wasm32-unknown-unknown"

      - name: Setup Bun
        uses: oven-sh/setup-bun@v1
        with:
          bun-version: latest

      - name: Install wasm-pack
        run: curl https://rustwasm.github.io/wasm-pack/installer/init.sh -sSf | sh

      - name: Install dependencies
        run: bun install --frozen-lockfile

      - name: Load environment variables from wrangler.jsonc
        working-directory: packages/app
        run: |
          cat wrangler.jsonc | jq -r ".env.sepolia.vars|to_entries|map(\"\(.key)=\(.value|tostring)\")|.[]" >> "$GITHUB_ENV"

      - name: Build (@runelabsxyz/controller-typeddata)
        run: |
          bun run --filter '@runelabsxyz/controller-typeddata' build

      - name: Build app
        run: |
          bun run --filter '@socialink/app' build

      - name: Run database migrations
        working-directory: packages/app
        if: ${{ github.ref == 'refs/heads/main' }}
        run: |
          # We are using "" to avoid the runtime issue
          echo "" | bun wrangler d1 migrations apply DB --env sepolia --remote
        env:
          CLOUDFLARE_API_TOKEN: ${{ secrets.CLOUDFLARE_API_TOKEN }}
          CLOUDFLARE_ACCOUNT_ID: ${{ vars.CLOUDFLARE_ACCOUNT_ID }}

      - name: Set outputs
        id: vars
        run: |
          echo "sha_short=$(git rev-parse --short HEAD)" >> $GITHUB_OUTPUT
          echo "commit_message=$(git log -1 --pretty=%B | sed -n '1p')" >> $GITHUB_OUTPUT

      - name: Upload version to Cloudflare
        working-directory: packages/app
        run: |
          bun wrangler versions upload \
            --tag "${{ steps.vars.outputs.sha_short }}" \
            --message "${{ steps.vars.outputs.commit_message }}" \
            --env sepolia
        env:
          CLOUDFLARE_API_TOKEN: ${{ secrets.CLOUDFLARE_API_TOKEN }}
          CLOUDFLARE_ACCOUNT_ID: ${{ vars.CLOUDFLARE_ACCOUNT_ID }}

      - name: Promote version as active
        # Only promote if it's a push to main
        if: ${{ github.ref == 'refs/heads/main' }}
        working-directory: packages/app
        run: |
          export VERSION_ID=$(bun wrangler versions list --env sepolia --json | jq -r '.[] | select(.annotations."workers/tag" == "${{ steps.vars.outputs.sha_short }}") | .id')
          bun wrangler versions deploy -y $VERSION_ID@100% --env sepolia --message "Deployed version ${{ steps.vars.outputs.sha_short }} - GitHub Action"
        env:
          CLOUDFLARE_API_TOKEN: ${{ secrets.CLOUDFLARE_API_TOKEN }}
          CLOUDFLARE_ACCOUNT_ID: ${{ vars.CLOUDFLARE_ACCOUNT_ID }}
